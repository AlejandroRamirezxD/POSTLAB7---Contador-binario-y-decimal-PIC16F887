

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 12:20:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211                           
   212                           	psect	nvBANK0
   213  002D                     __pnvBANK0:
   214  002D                     _display2:
   215  002D                     	ds	1
   216  002E                     _display1:
   217  002E                     	ds	1
   218  002F                     _display0:
   219  002F                     	ds	1
   220  0030                     _centenas:
   221  0030                     	ds	1
   222  0031                     _decenas:
   223  0031                     	ds	1
   224  0032                     _unidades:
   225  0032                     	ds	1
   226  0006                     _PORTB	set	6
   227  0006                     _PORTBbits	set	6
   228  0005                     _PORTA	set	5
   229  0001                     _TMR0	set	1
   230  0009                     _PORTE	set	9
   231  0007                     _PORTC	set	7
   232  0008                     _PORTD	set	8
   233  000B                     _INTCONbits	set	11
   234  0031                     _RB1	set	49
   235  0030                     _RB0	set	48
   236  0095                     _WPUB	set	149
   237  0081                     _OPTION_REGbits	set	129
   238  008F                     _OSCCONbits	set	143
   239  0089                     _TRISE	set	137
   240  0088                     _TRISD	set	136
   241  0087                     _TRISC	set	135
   242  0086                     _TRISB	set	134
   243  0085                     _TRISA	set	133
   244  0189                     _ANSELH	set	393
   245  0188                     _ANSEL	set	392
   246                           
   247                           	psect	cinit
   248  0011                     start_initialization:	
   249                           ; #config settings
   250                           
   251  0011                     __initialization:
   252                           
   253                           ; Clear objects allocated to COMMON
   254  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   255                           
   256                           ; Clear objects allocated to BANK0
   257  0012  1283               	bcf	3,5	;RP0=0, select bank0
   258  0013  1303               	bcf	3,6	;RP1=0, select bank0
   259  0014  01B3               	clrf	__pbssBANK0& (0+127)
   260  0015                     end_of_initialization:	
   261                           ;End of C runtime variable initialization code
   262                           
   263  0015                     __end_of__initialization:
   264  0015  0183               	clrf	3
   265  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   266                           
   267                           	psect	bssCOMMON
   268  0078                     __pbssCOMMON:
   269  0078                     _turno:
   270  0078                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  0033                     __pbssBANK0:
   274  0033                     _cuenta:
   275  0033                     	ds	1
   276                           
   277                           	psect	cstackCOMMON
   278  0070                     __pcstackCOMMON:
   279  0070                     ?_setup:
   280  0070                     ?_ArregloNumero:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_Displayturno:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ?_isr:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ??_isr:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_main:	
   293                           ; 1 bytes @ 0x0
   294                           
   295                           
   296                           ; 1 bytes @ 0x0
   297  0070                     	ds	5
   298  0075                     ??_setup:
   299  0075                     ??_ArregloNumero:	
   300                           ; 1 bytes @ 0x5
   301                           
   302  0075                     ??_Displayturno:	
   303                           ; 1 bytes @ 0x5
   304                           
   305  0075                     ??___awdiv:	
   306                           ; 1 bytes @ 0x5
   307                           
   308  0075                     ??___awmod:	
   309                           ; 1 bytes @ 0x5
   310                           
   311                           
   312                           ; 1 bytes @ 0x5
   313  0075                     	ds	1
   314  0076                     ___awmod@counter:
   315                           
   316                           ; 1 bytes @ 0x6
   317  0076                     	ds	1
   318  0077                     ArregloNumero@numero:
   319  0077                     ___awmod@sign:	
   320                           ; 1 bytes @ 0x7
   321                           
   322                           
   323                           ; 1 bytes @ 0x7
   324  0077                     	ds	1
   325                           
   326                           	psect	cstackBANK0
   327  0020                     __pcstackBANK0:
   328  0020                     ?___awdiv:
   329  0020                     ?___awmod:	
   330                           ; 2 bytes @ 0x0
   331                           
   332  0020                     ___awdiv@divisor:	
   333                           ; 2 bytes @ 0x0
   334                           
   335  0020                     ___awmod@divisor:	
   336                           ; 2 bytes @ 0x0
   337                           
   338                           
   339                           ; 2 bytes @ 0x0
   340  0020                     	ds	2
   341  0022                     ___awdiv@dividend:
   342  0022                     ___awmod@dividend:	
   343                           ; 2 bytes @ 0x2
   344                           
   345                           
   346                           ; 2 bytes @ 0x2
   347  0022                     	ds	2
   348  0024                     ___awdiv@counter:
   349                           
   350                           ; 1 bytes @ 0x4
   351  0024                     	ds	1
   352  0025                     ___awdiv@sign:
   353                           
   354                           ; 1 bytes @ 0x5
   355  0025                     	ds	1
   356  0026                     ___awdiv@quotient:
   357                           
   358                           ; 2 bytes @ 0x6
   359  0026                     	ds	2
   360  0028                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x8
   363  0028                     	ds	3
   364  002B                     main@cociente0:
   365                           
   366                           ; 2 bytes @ 0xB
   367  002B                     	ds	2
   368                           
   369                           	psect	maintext
   370  0019                     __pmaintext:	
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 93 in file "AlternoPostlab7Main.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  cociente0       2   11[BANK0 ] int 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       2       0       0       0
   392 ;;      Temps:          0       3       0       0       0
   393 ;;      Totals:         0       5       0       0       0
   394 ;;Total ram usage:        5 bytes
   395 ;; Hardware stack levels required when called: 2
   396 ;; This function calls:
   397 ;;		_ArregloNumero
   398 ;;		_Displayturno
   399 ;;		___awdiv
   400 ;;		___awmod
   401 ;;		_setup
   402 ;; This function is called by:
   403 ;;		Startup code after reset
   404 ;; This function uses a non-reentrant model
   405 ;;
   406                           
   407                           
   408                           ;psect for function _main
   409  0019                     _main:
   410  0019                     l1476:	
   411                           ;incstack = 0
   412                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   413                           
   414                           
   415                           ;AlternoPostlab7Main.c: 95:     setup();
   416  0019  120A  118A  21F8  120A  118A  	fcall	_setup
   417  001E                     l79:	
   418                           ;AlternoPostlab7Main.c: 97:     while(1)
   419                           
   420                           
   421                           ;AlternoPostlab7Main.c: 98:     {;AlternoPostlab7Main.c: 99:         unidades = cuenta%1
      +                          0;
   422  001E  300A               	movlw	10
   423  001F  1283               	bcf	3,5	;RP0=0, select bank0
   424  0020  1303               	bcf	3,6	;RP1=0, select bank0
   425  0021  00A0               	movwf	___awmod@divisor
   426  0022  3000               	movlw	0
   427  0023  00A1               	movwf	___awmod@divisor+1
   428  0024  0833               	movf	_cuenta,w
   429  0025  00A8               	movwf	??_main
   430  0026  01A9               	clrf	??_main+1
   431  0027  0828               	movf	??_main,w
   432  0028  00A2               	movwf	___awmod@dividend
   433  0029  0829               	movf	??_main+1,w
   434  002A  00A3               	movwf	___awmod@dividend+1
   435  002B  120A  118A  211F  120A  118A  	fcall	___awmod
   436  0030  1283               	bcf	3,5	;RP0=0, select bank0
   437  0031  1303               	bcf	3,6	;RP1=0, select bank0
   438  0032  0820               	movf	?___awmod,w
   439  0033  00AA               	movwf	??_main+2
   440  0034  082A               	movf	??_main+2,w
   441  0035  00B2               	movwf	_unidades
   442                           
   443                           ;AlternoPostlab7Main.c: 100:         int cociente0 = (int)(cuenta/10);
   444  0036  300A               	movlw	10
   445  0037  00A0               	movwf	___awdiv@divisor
   446  0038  3000               	movlw	0
   447  0039  00A1               	movwf	___awdiv@divisor+1
   448  003A  0833               	movf	_cuenta,w
   449  003B  00A8               	movwf	??_main
   450  003C  01A9               	clrf	??_main+1
   451  003D  0828               	movf	??_main,w
   452  003E  00A2               	movwf	___awdiv@dividend
   453  003F  0829               	movf	??_main+1,w
   454  0040  00A3               	movwf	___awdiv@dividend+1
   455  0041  120A  118A  20B6  120A  118A  	fcall	___awdiv
   456  0046  1283               	bcf	3,5	;RP0=0, select bank0
   457  0047  1303               	bcf	3,6	;RP1=0, select bank0
   458  0048  0821               	movf	?___awdiv+1,w
   459  0049  00AC               	movwf	main@cociente0+1
   460  004A  0820               	movf	?___awdiv,w
   461  004B  00AB               	movwf	main@cociente0
   462                           
   463                           ;AlternoPostlab7Main.c: 102:         decenas = cociente0%10;
   464  004C  300A               	movlw	10
   465  004D  00A0               	movwf	___awmod@divisor
   466  004E  3000               	movlw	0
   467  004F  00A1               	movwf	___awmod@divisor+1
   468  0050  082C               	movf	main@cociente0+1,w
   469  0051  00A3               	movwf	___awmod@dividend+1
   470  0052  082B               	movf	main@cociente0,w
   471  0053  00A2               	movwf	___awmod@dividend
   472  0054  120A  118A  211F  120A  118A  	fcall	___awmod
   473  0059  1283               	bcf	3,5	;RP0=0, select bank0
   474  005A  1303               	bcf	3,6	;RP1=0, select bank0
   475  005B  0820               	movf	?___awmod,w
   476  005C  00A8               	movwf	??_main
   477  005D  0828               	movf	??_main,w
   478  005E  00B1               	movwf	_decenas
   479                           
   480                           ;AlternoPostlab7Main.c: 103:         centenas = (int)(cociente0/10);
   481  005F  300A               	movlw	10
   482  0060  00A0               	movwf	___awdiv@divisor
   483  0061  3000               	movlw	0
   484  0062  00A1               	movwf	___awdiv@divisor+1
   485  0063  082C               	movf	main@cociente0+1,w
   486  0064  00A3               	movwf	___awdiv@dividend+1
   487  0065  082B               	movf	main@cociente0,w
   488  0066  00A2               	movwf	___awdiv@dividend
   489  0067  120A  118A  20B6  120A  118A  	fcall	___awdiv
   490  006C  1283               	bcf	3,5	;RP0=0, select bank0
   491  006D  1303               	bcf	3,6	;RP1=0, select bank0
   492  006E  0820               	movf	?___awdiv,w
   493  006F  00A8               	movwf	??_main
   494  0070  0828               	movf	??_main,w
   495  0071  00B0               	movwf	_centenas
   496  0072                     l1478:
   497                           
   498                           ;AlternoPostlab7Main.c: 105:         display0 = ArregloNumero(unidades);
   499  0072  0832               	movf	_unidades,w
   500  0073  120A  118A  217A  120A  118A  	fcall	_ArregloNumero
   501  0078  1283               	bcf	3,5	;RP0=0, select bank0
   502  0079  1303               	bcf	3,6	;RP1=0, select bank0
   503  007A  00A8               	movwf	??_main
   504  007B  0828               	movf	??_main,w
   505  007C  00AF               	movwf	_display0
   506  007D                     l1480:
   507                           
   508                           ;AlternoPostlab7Main.c: 106:         display1 = ArregloNumero(decenas);
   509  007D  0831               	movf	_decenas,w
   510  007E  120A  118A  217A  120A  118A  	fcall	_ArregloNumero
   511  0083  1283               	bcf	3,5	;RP0=0, select bank0
   512  0084  1303               	bcf	3,6	;RP1=0, select bank0
   513  0085  00A8               	movwf	??_main
   514  0086  0828               	movf	??_main,w
   515  0087  00AE               	movwf	_display1
   516  0088                     l1482:
   517                           
   518                           ;AlternoPostlab7Main.c: 107:         display2 = ArregloNumero(centenas);
   519  0088  0830               	movf	_centenas,w
   520  0089  120A  118A  217A  120A  118A  	fcall	_ArregloNumero
   521  008E  1283               	bcf	3,5	;RP0=0, select bank0
   522  008F  1303               	bcf	3,6	;RP1=0, select bank0
   523  0090  00A8               	movwf	??_main
   524  0091  0828               	movf	??_main,w
   525  0092  00AD               	movwf	_display2
   526  0093                     l1484:
   527                           
   528                           ;AlternoPostlab7Main.c: 109:         PORTA = cuenta;
   529  0093  0833               	movf	_cuenta,w
   530  0094  0085               	movwf	5	;volatile
   531  0095                     l1486:
   532                           
   533                           ;AlternoPostlab7Main.c: 110:         Displayturno();
   534  0095  120A  118A  2226  120A  118A  	fcall	_Displayturno
   535  009A                     l1488:
   536                           
   537                           ;AlternoPostlab7Main.c: 112:         if(!PORTBbits.RB0)
   538  009A  1283               	bcf	3,5	;RP0=0, select bank0
   539  009B  1303               	bcf	3,6	;RP1=0, select bank0
   540  009C  1806               	btfsc	6,0	;volatile
   541  009D  289F               	goto	u681
   542  009E  28A0               	goto	u680
   543  009F                     u681:
   544  009F  28A8               	goto	l1494
   545  00A0                     u680:
   546  00A0                     l81:
   547  00A0  1C06               	btfss	6,0	;volatile
   548  00A1  28A3               	goto	u691
   549  00A2  28A4               	goto	u690
   550  00A3                     u691:
   551  00A3  28A0               	goto	l81
   552  00A4                     u690:
   553  00A4                     l1492:
   554                           
   555                           ;AlternoPostlab7Main.c: 115:             cuenta ++;
   556  00A4  3001               	movlw	1
   557  00A5  00A8               	movwf	??_main
   558  00A6  0828               	movf	??_main,w
   559  00A7  07B3               	addwf	_cuenta,f
   560  00A8                     l1494:
   561                           
   562                           ;AlternoPostlab7Main.c: 118:         if(!PORTBbits.RB1)
   563  00A8  1886               	btfsc	6,1	;volatile
   564  00A9  28AB               	goto	u701
   565  00AA  28AC               	goto	u700
   566  00AB                     u701:
   567  00AB  281E               	goto	l79
   568  00AC                     u700:
   569  00AC                     l85:
   570  00AC  1C86               	btfss	6,1	;volatile
   571  00AD  28AF               	goto	u711
   572  00AE  28B0               	goto	u710
   573  00AF                     u711:
   574  00AF  28AC               	goto	l85
   575  00B0                     u710:
   576  00B0                     l1498:
   577                           
   578                           ;AlternoPostlab7Main.c: 121:             cuenta --;
   579  00B0  3001               	movlw	1
   580  00B1  02B3               	subwf	_cuenta,f
   581  00B2  281E               	goto	l79
   582  00B3  120A  118A  280E   	ljmp	start
   583  00B6                     __end_of_main:
   584                           
   585                           	psect	text1
   586  01F8                     __ptext1:	
   587 ;; *************** function _setup *****************
   588 ;; Defined at:
   589 ;;		line 131 in file "AlternoPostlab7Main.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 1
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           
   618                           ;psect for function _setup
   619  01F8                     _setup:
   620  01F8                     l1052:	
   621                           ;incstack = 0
   622                           ; Regs used in _setup: [wreg+status,2+status,0]
   623                           
   624                           
   625                           ;AlternoPostlab7Main.c: 134:     ANSEL = 0;
   626  01F8  1683               	bsf	3,5	;RP0=1, select bank3
   627  01F9  1703               	bsf	3,6	;RP1=1, select bank3
   628  01FA  0188               	clrf	8	;volatile
   629                           
   630                           ;AlternoPostlab7Main.c: 135:     ANSELH = 0;
   631  01FB  0189               	clrf	9	;volatile
   632                           
   633                           ;AlternoPostlab7Main.c: 137:     TRISA = 0;
   634  01FC  1683               	bsf	3,5	;RP0=1, select bank1
   635  01FD  1303               	bcf	3,6	;RP1=0, select bank1
   636  01FE  0185               	clrf	5	;volatile
   637  01FF                     l1054:
   638                           
   639                           ;AlternoPostlab7Main.c: 138:     TRISB = 0b11;
   640  01FF  3003               	movlw	3
   641  0200  0086               	movwf	6	;volatile
   642  0201                     l1056:
   643                           
   644                           ;AlternoPostlab7Main.c: 139:     TRISC = 0;
   645  0201  0187               	clrf	7	;volatile
   646  0202                     l1058:
   647                           
   648                           ;AlternoPostlab7Main.c: 140:     TRISD = 0;
   649  0202  0188               	clrf	8	;volatile
   650  0203                     l1060:
   651                           
   652                           ;AlternoPostlab7Main.c: 141:     TRISE = 0;
   653  0203  0189               	clrf	9	;volatile
   654  0204                     l1062:
   655                           
   656                           ;AlternoPostlab7Main.c: 143:     PORTA = 0;
   657  0204  1283               	bcf	3,5	;RP0=0, select bank0
   658  0205  1303               	bcf	3,6	;RP1=0, select bank0
   659  0206  0185               	clrf	5	;volatile
   660  0207                     l1064:
   661                           
   662                           ;AlternoPostlab7Main.c: 144:     PORTB = 0;
   663  0207  0186               	clrf	6	;volatile
   664  0208                     l1066:
   665                           
   666                           ;AlternoPostlab7Main.c: 145:     PORTC = 0;
   667  0208  0187               	clrf	7	;volatile
   668  0209                     l1068:
   669                           
   670                           ;AlternoPostlab7Main.c: 146:     PORTD = 0;
   671  0209  0188               	clrf	8	;volatile
   672  020A                     l1070:
   673                           
   674                           ;AlternoPostlab7Main.c: 147:     PORTE = 0;
   675  020A  0189               	clrf	9	;volatile
   676  020B                     l1072:
   677                           
   678                           ;AlternoPostlab7Main.c: 151:     OSCCONbits.IRCF = 0b010;
   679  020B  1683               	bsf	3,5	;RP0=1, select bank1
   680  020C  1303               	bcf	3,6	;RP1=0, select bank1
   681  020D  080F               	movf	15,w	;volatile
   682  020E  398F               	andlw	-113
   683  020F  3820               	iorlw	32
   684  0210  008F               	movwf	15	;volatile
   685  0211                     l1074:
   686                           
   687                           ;AlternoPostlab7Main.c: 152:     OSCCONbits.SCS = 1;
   688  0211  140F               	bsf	15,0	;volatile
   689  0212                     l1076:
   690                           
   691                           ;AlternoPostlab7Main.c: 155:     INTCONbits.GIE = 1;
   692  0212  178B               	bsf	11,7	;volatile
   693  0213                     l1078:
   694                           
   695                           ;AlternoPostlab7Main.c: 156:     INTCONbits.PEIE = 1;
   696  0213  170B               	bsf	11,6	;volatile
   697  0214                     l1080:
   698                           
   699                           ;AlternoPostlab7Main.c: 157:     INTCONbits.RBIE = 1;
   700  0214  158B               	bsf	11,3	;volatile
   701  0215                     l1082:
   702                           
   703                           ;AlternoPostlab7Main.c: 158:     INTCONbits.RBIF = 0;
   704  0215  100B               	bcf	11,0	;volatile
   705  0216                     l1084:
   706                           
   707                           ;AlternoPostlab7Main.c: 159:     INTCONbits.T0IE = 1;
   708  0216  168B               	bsf	11,5	;volatile
   709  0217                     l1086:
   710                           
   711                           ;AlternoPostlab7Main.c: 160:     INTCONbits.T0IF = 0;
   712  0217  110B               	bcf	11,2	;volatile
   713  0218                     l1088:
   714                           
   715                           ;AlternoPostlab7Main.c: 163:     OPTION_REGbits.nRBPU = 0;
   716  0218  1381               	bcf	1,7	;volatile
   717  0219                     l1090:
   718                           
   719                           ;AlternoPostlab7Main.c: 164:     WPUB = 0b11;
   720  0219  3003               	movlw	3
   721  021A  0095               	movwf	21	;volatile
   722  021B                     l1092:
   723                           
   724                           ;AlternoPostlab7Main.c: 167:     OPTION_REGbits.PS0 = 0;
   725  021B  1001               	bcf	1,0	;volatile
   726  021C                     l1094:
   727                           
   728                           ;AlternoPostlab7Main.c: 168:     OPTION_REGbits.PS1 = 0;
   729  021C  1081               	bcf	1,1	;volatile
   730  021D                     l1096:
   731                           
   732                           ;AlternoPostlab7Main.c: 169:     OPTION_REGbits.PS2 = 0;
   733  021D  1101               	bcf	1,2	;volatile
   734  021E                     l1098:
   735                           
   736                           ;AlternoPostlab7Main.c: 170:     OPTION_REGbits.PSA = 0;
   737  021E  1181               	bcf	1,3	;volatile
   738  021F                     l1100:
   739                           
   740                           ;AlternoPostlab7Main.c: 171:     OPTION_REGbits.T0CS = 0;
   741  021F  1281               	bcf	1,5	;volatile
   742  0220                     l1102:
   743                           
   744                           ;AlternoPostlab7Main.c: 172:     OPTION_REGbits.T0SE = 0;
   745  0220  1201               	bcf	1,4	;volatile
   746  0221                     l1104:
   747                           
   748                           ;AlternoPostlab7Main.c: 173:     TMR0 = 5;
   749  0221  3005               	movlw	5
   750  0222  1283               	bcf	3,5	;RP0=0, select bank0
   751  0223  1303               	bcf	3,6	;RP1=0, select bank0
   752  0224  0081               	movwf	1	;volatile
   753  0225                     l93:
   754  0225  0008               	return
   755  0226                     __end_of_setup:
   756                           
   757                           	psect	text2
   758  011F                     __ptext2:	
   759 ;; *************** function ___awmod *****************
   760 ;; Defined at:
   761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;  divisor         2    0[BANK0 ] int 
   764 ;;  dividend        2    2[BANK0 ] int 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  sign            1    7[COMMON] unsigned char 
   767 ;;  counter         1    6[COMMON] unsigned char 
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    0[BANK0 ] int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       4       0       0       0
   778 ;;      Locals:         2       0       0       0       0
   779 ;;      Temps:          1       0       0       0       0
   780 ;;      Totals:         3       4       0       0       0
   781 ;;Total ram usage:        7 bytes
   782 ;; Hardware stack levels used: 1
   783 ;; Hardware stack levels required when called: 1
   784 ;; This function calls:
   785 ;;		Nothing
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function ___awmod
   793  011F                     ___awmod:
   794  011F                     l1438:	
   795                           ;incstack = 0
   796                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   797                           
   798  011F  01F7               	clrf	___awmod@sign
   799  0120                     l1440:
   800  0120  1283               	bcf	3,5	;RP0=0, select bank0
   801  0121  1303               	bcf	3,6	;RP1=0, select bank0
   802  0122  1FA3               	btfss	___awmod@dividend+1,7
   803  0123  2925               	goto	u591
   804  0124  2926               	goto	u590
   805  0125                     u591:
   806  0125  292D               	goto	l1446
   807  0126                     u590:
   808  0126                     l1442:
   809  0126  09A2               	comf	___awmod@dividend,f
   810  0127  09A3               	comf	___awmod@dividend+1,f
   811  0128  0AA2               	incf	___awmod@dividend,f
   812  0129  1903               	skipnz
   813  012A  0AA3               	incf	___awmod@dividend+1,f
   814  012B                     l1444:
   815  012B  01F7               	clrf	___awmod@sign
   816  012C  0AF7               	incf	___awmod@sign,f
   817  012D                     l1446:
   818  012D  1FA1               	btfss	___awmod@divisor+1,7
   819  012E  2930               	goto	u601
   820  012F  2931               	goto	u600
   821  0130                     u601:
   822  0130  2936               	goto	l1450
   823  0131                     u600:
   824  0131                     l1448:
   825  0131  09A0               	comf	___awmod@divisor,f
   826  0132  09A1               	comf	___awmod@divisor+1,f
   827  0133  0AA0               	incf	___awmod@divisor,f
   828  0134  1903               	skipnz
   829  0135  0AA1               	incf	___awmod@divisor+1,f
   830  0136                     l1450:
   831  0136  0820               	movf	___awmod@divisor,w
   832  0137  0421               	iorwf	___awmod@divisor+1,w
   833  0138  1903               	btfsc	3,2
   834  0139  293B               	goto	u611
   835  013A  293C               	goto	u610
   836  013B                     u611:
   837  013B  296B               	goto	l1468
   838  013C                     u610:
   839  013C                     l1452:
   840  013C  01F6               	clrf	___awmod@counter
   841  013D  0AF6               	incf	___awmod@counter,f
   842  013E  294A               	goto	l1458
   843  013F                     l1454:
   844  013F  3001               	movlw	1
   845  0140                     u625:
   846  0140  1003               	clrc
   847  0141  0DA0               	rlf	___awmod@divisor,f
   848  0142  0DA1               	rlf	___awmod@divisor+1,f
   849  0143  3EFF               	addlw	-1
   850  0144  1D03               	skipz
   851  0145  2940               	goto	u625
   852  0146                     l1456:
   853  0146  3001               	movlw	1
   854  0147  00F5               	movwf	??___awmod
   855  0148  0875               	movf	??___awmod,w
   856  0149  07F6               	addwf	___awmod@counter,f
   857  014A                     l1458:
   858  014A  1FA1               	btfss	___awmod@divisor+1,7
   859  014B  294D               	goto	u631
   860  014C  294E               	goto	u630
   861  014D                     u631:
   862  014D  293F               	goto	l1454
   863  014E                     u630:
   864  014E                     l1460:
   865  014E  0821               	movf	___awmod@divisor+1,w
   866  014F  0223               	subwf	___awmod@dividend+1,w
   867  0150  1D03               	skipz
   868  0151  2954               	goto	u645
   869  0152  0820               	movf	___awmod@divisor,w
   870  0153  0222               	subwf	___awmod@dividend,w
   871  0154                     u645:
   872  0154  1C03               	skipc
   873  0155  2957               	goto	u641
   874  0156  2958               	goto	u640
   875  0157                     u641:
   876  0157  295E               	goto	l1464
   877  0158                     u640:
   878  0158                     l1462:
   879  0158  0820               	movf	___awmod@divisor,w
   880  0159  02A2               	subwf	___awmod@dividend,f
   881  015A  0821               	movf	___awmod@divisor+1,w
   882  015B  1C03               	skipc
   883  015C  03A3               	decf	___awmod@dividend+1,f
   884  015D  02A3               	subwf	___awmod@dividend+1,f
   885  015E                     l1464:
   886  015E  3001               	movlw	1
   887  015F                     u655:
   888  015F  1003               	clrc
   889  0160  0CA1               	rrf	___awmod@divisor+1,f
   890  0161  0CA0               	rrf	___awmod@divisor,f
   891  0162  3EFF               	addlw	-1
   892  0163  1D03               	skipz
   893  0164  295F               	goto	u655
   894  0165                     l1466:
   895  0165  3001               	movlw	1
   896  0166  02F6               	subwf	___awmod@counter,f
   897  0167  1D03               	btfss	3,2
   898  0168  296A               	goto	u661
   899  0169  296B               	goto	u660
   900  016A                     u661:
   901  016A  294E               	goto	l1460
   902  016B                     u660:
   903  016B                     l1468:
   904  016B  0877               	movf	___awmod@sign,w
   905  016C  1903               	btfsc	3,2
   906  016D  296F               	goto	u671
   907  016E  2970               	goto	u670
   908  016F                     u671:
   909  016F  2975               	goto	l1472
   910  0170                     u670:
   911  0170                     l1470:
   912  0170  09A2               	comf	___awmod@dividend,f
   913  0171  09A3               	comf	___awmod@dividend+1,f
   914  0172  0AA2               	incf	___awmod@dividend,f
   915  0173  1903               	skipnz
   916  0174  0AA3               	incf	___awmod@dividend+1,f
   917  0175                     l1472:
   918  0175  0823               	movf	___awmod@dividend+1,w
   919  0176  00A1               	movwf	?___awmod+1
   920  0177  0822               	movf	___awmod@dividend,w
   921  0178  00A0               	movwf	?___awmod
   922  0179                     l370:
   923  0179  0008               	return
   924  017A                     __end_of___awmod:
   925                           
   926                           	psect	text3
   927  00B6                     __ptext3:	
   928 ;; *************** function ___awdiv *****************
   929 ;; Defined at:
   930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  divisor         2    0[BANK0 ] int 
   933 ;;  dividend        2    2[BANK0 ] int 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  quotient        2    6[BANK0 ] int 
   936 ;;  sign            1    5[BANK0 ] unsigned char 
   937 ;;  counter         1    4[BANK0 ] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2    0[BANK0 ] int 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       4       0       0       0
   948 ;;      Locals:         0       4       0       0       0
   949 ;;      Temps:          1       0       0       0       0
   950 ;;      Totals:         1       8       0       0       0
   951 ;;Total ram usage:        9 bytes
   952 ;; Hardware stack levels used: 1
   953 ;; Hardware stack levels required when called: 1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function ___awdiv
   963  00B6                     ___awdiv:
   964  00B6                     l1394:	
   965                           ;incstack = 0
   966                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   967                           
   968  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   969  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   970  00B8  01A5               	clrf	___awdiv@sign
   971  00B9                     l1396:
   972  00B9  1FA1               	btfss	___awdiv@divisor+1,7
   973  00BA  28BC               	goto	u491
   974  00BB  28BD               	goto	u490
   975  00BC                     u491:
   976  00BC  28C4               	goto	l1402
   977  00BD                     u490:
   978  00BD                     l1398:
   979  00BD  09A0               	comf	___awdiv@divisor,f
   980  00BE  09A1               	comf	___awdiv@divisor+1,f
   981  00BF  0AA0               	incf	___awdiv@divisor,f
   982  00C0  1903               	skipnz
   983  00C1  0AA1               	incf	___awdiv@divisor+1,f
   984  00C2                     l1400:
   985  00C2  01A5               	clrf	___awdiv@sign
   986  00C3  0AA5               	incf	___awdiv@sign,f
   987  00C4                     l1402:
   988  00C4  1FA3               	btfss	___awdiv@dividend+1,7
   989  00C5  28C7               	goto	u501
   990  00C6  28C8               	goto	u500
   991  00C7                     u501:
   992  00C7  28D1               	goto	l1408
   993  00C8                     u500:
   994  00C8                     l1404:
   995  00C8  09A2               	comf	___awdiv@dividend,f
   996  00C9  09A3               	comf	___awdiv@dividend+1,f
   997  00CA  0AA2               	incf	___awdiv@dividend,f
   998  00CB  1903               	skipnz
   999  00CC  0AA3               	incf	___awdiv@dividend+1,f
  1000  00CD                     l1406:
  1001  00CD  3001               	movlw	1
  1002  00CE  00F5               	movwf	??___awdiv
  1003  00CF  0875               	movf	??___awdiv,w
  1004  00D0  06A5               	xorwf	___awdiv@sign,f
  1005  00D1                     l1408:
  1006  00D1  01A6               	clrf	___awdiv@quotient
  1007  00D2  01A7               	clrf	___awdiv@quotient+1
  1008  00D3                     l1410:
  1009  00D3  0820               	movf	___awdiv@divisor,w
  1010  00D4  0421               	iorwf	___awdiv@divisor+1,w
  1011  00D5  1903               	btfsc	3,2
  1012  00D6  28D8               	goto	u511
  1013  00D7  28D9               	goto	u510
  1014  00D8                     u511:
  1015  00D8  2910               	goto	l1430
  1016  00D9                     u510:
  1017  00D9                     l1412:
  1018  00D9  01A4               	clrf	___awdiv@counter
  1019  00DA  0AA4               	incf	___awdiv@counter,f
  1020  00DB  28E7               	goto	l1418
  1021  00DC                     l1414:
  1022  00DC  3001               	movlw	1
  1023  00DD                     u525:
  1024  00DD  1003               	clrc
  1025  00DE  0DA0               	rlf	___awdiv@divisor,f
  1026  00DF  0DA1               	rlf	___awdiv@divisor+1,f
  1027  00E0  3EFF               	addlw	-1
  1028  00E1  1D03               	skipz
  1029  00E2  28DD               	goto	u525
  1030  00E3                     l1416:
  1031  00E3  3001               	movlw	1
  1032  00E4  00F5               	movwf	??___awdiv
  1033  00E5  0875               	movf	??___awdiv,w
  1034  00E6  07A4               	addwf	___awdiv@counter,f
  1035  00E7                     l1418:
  1036  00E7  1FA1               	btfss	___awdiv@divisor+1,7
  1037  00E8  28EA               	goto	u531
  1038  00E9  28EB               	goto	u530
  1039  00EA                     u531:
  1040  00EA  28DC               	goto	l1414
  1041  00EB                     u530:
  1042  00EB                     l1420:
  1043  00EB  3001               	movlw	1
  1044  00EC                     u545:
  1045  00EC  1003               	clrc
  1046  00ED  0DA6               	rlf	___awdiv@quotient,f
  1047  00EE  0DA7               	rlf	___awdiv@quotient+1,f
  1048  00EF  3EFF               	addlw	-1
  1049  00F0  1D03               	skipz
  1050  00F1  28EC               	goto	u545
  1051  00F2  0821               	movf	___awdiv@divisor+1,w
  1052  00F3  0223               	subwf	___awdiv@dividend+1,w
  1053  00F4  1D03               	skipz
  1054  00F5  28F8               	goto	u555
  1055  00F6  0820               	movf	___awdiv@divisor,w
  1056  00F7  0222               	subwf	___awdiv@dividend,w
  1057  00F8                     u555:
  1058  00F8  1C03               	skipc
  1059  00F9  28FB               	goto	u551
  1060  00FA  28FC               	goto	u550
  1061  00FB                     u551:
  1062  00FB  2903               	goto	l1426
  1063  00FC                     u550:
  1064  00FC                     l1422:
  1065  00FC  0820               	movf	___awdiv@divisor,w
  1066  00FD  02A2               	subwf	___awdiv@dividend,f
  1067  00FE  0821               	movf	___awdiv@divisor+1,w
  1068  00FF  1C03               	skipc
  1069  0100  03A3               	decf	___awdiv@dividend+1,f
  1070  0101  02A3               	subwf	___awdiv@dividend+1,f
  1071  0102                     l1424:
  1072  0102  1426               	bsf	___awdiv@quotient,0
  1073  0103                     l1426:
  1074  0103  3001               	movlw	1
  1075  0104                     u565:
  1076  0104  1003               	clrc
  1077  0105  0CA1               	rrf	___awdiv@divisor+1,f
  1078  0106  0CA0               	rrf	___awdiv@divisor,f
  1079  0107  3EFF               	addlw	-1
  1080  0108  1D03               	skipz
  1081  0109  2904               	goto	u565
  1082  010A                     l1428:
  1083  010A  3001               	movlw	1
  1084  010B  02A4               	subwf	___awdiv@counter,f
  1085  010C  1D03               	btfss	3,2
  1086  010D  290F               	goto	u571
  1087  010E  2910               	goto	u570
  1088  010F                     u571:
  1089  010F  28EB               	goto	l1420
  1090  0110                     u570:
  1091  0110                     l1430:
  1092  0110  0825               	movf	___awdiv@sign,w
  1093  0111  1903               	btfsc	3,2
  1094  0112  2914               	goto	u581
  1095  0113  2915               	goto	u580
  1096  0114                     u581:
  1097  0114  291A               	goto	l1434
  1098  0115                     u580:
  1099  0115                     l1432:
  1100  0115  09A6               	comf	___awdiv@quotient,f
  1101  0116  09A7               	comf	___awdiv@quotient+1,f
  1102  0117  0AA6               	incf	___awdiv@quotient,f
  1103  0118  1903               	skipnz
  1104  0119  0AA7               	incf	___awdiv@quotient+1,f
  1105  011A                     l1434:
  1106  011A  0827               	movf	___awdiv@quotient+1,w
  1107  011B  00A1               	movwf	?___awdiv+1
  1108  011C  0826               	movf	___awdiv@quotient,w
  1109  011D  00A0               	movwf	?___awdiv
  1110  011E                     l357:
  1111  011E  0008               	return
  1112  011F                     __end_of___awdiv:
  1113                           
  1114                           	psect	text4
  1115  0226                     __ptext4:	
  1116 ;; *************** function _Displayturno *****************
  1117 ;; Defined at:
  1118 ;;		line 225 in file "AlternoPostlab7Main.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;		None
  1123 ;; Return value:  Size  Location     Type
  1124 ;;                  1    wreg      void 
  1125 ;; Registers used:
  1126 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1127 ;; Tracked objects:
  1128 ;;		On entry : 0/0
  1129 ;;		On exit  : 0/0
  1130 ;;		Unchanged: 0/0
  1131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1132 ;;      Params:         0       0       0       0       0
  1133 ;;      Locals:         0       0       0       0       0
  1134 ;;      Temps:          2       0       0       0       0
  1135 ;;      Totals:         2       0       0       0       0
  1136 ;;Total ram usage:        2 bytes
  1137 ;; Hardware stack levels used: 1
  1138 ;; Hardware stack levels required when called: 1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           
  1147                           ;psect for function _Displayturno
  1148  0226                     _Displayturno:
  1149  0226                     l1184:	
  1150                           ;incstack = 0
  1151                           ; Regs used in _Displayturno: [wreg-fsr0h+status,2+status,0]
  1152                           
  1153                           
  1154                           ;AlternoPostlab7Main.c: 227:     switch(turno){
  1155  0226  2A31               	goto	l1194
  1156  0227                     l113:	
  1157                           ;AlternoPostlab7Main.c: 228:         case 0:
  1158                           
  1159                           
  1160                           ;AlternoPostlab7Main.c: 229:             turno = 1 ;
  1161  0227  01F8               	clrf	_turno
  1162  0228  0AF8               	incf	_turno,f
  1163                           
  1164                           ;AlternoPostlab7Main.c: 230:             break;
  1165  0229  2A44               	goto	l118
  1166  022A                     l1186:
  1167                           
  1168                           ;AlternoPostlab7Main.c: 233:             turno = 2 ;
  1169  022A  3002               	movlw	2
  1170  022B  00F5               	movwf	??_Displayturno
  1171  022C  0875               	movf	??_Displayturno,w
  1172  022D  00F8               	movwf	_turno
  1173                           
  1174                           ;AlternoPostlab7Main.c: 234:             break;
  1175  022E  2A44               	goto	l118
  1176  022F                     l1188:
  1177                           
  1178                           ;AlternoPostlab7Main.c: 237:             turno = 0 ;
  1179  022F  01F8               	clrf	_turno
  1180                           
  1181                           ;AlternoPostlab7Main.c: 238:             break;
  1182  0230  2A44               	goto	l118
  1183  0231                     l1194:
  1184  0231  0878               	movf	_turno,w
  1185  0232  00F5               	movwf	??_Displayturno
  1186  0233  01F6               	clrf	??_Displayturno+1
  1187                           
  1188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1189                           ; Switch size 1, requested type "simple"
  1190                           ; Number of cases is 1, Range of values is 0 to 0
  1191                           ; switch strategies available:
  1192                           ; Name         Instructions Cycles
  1193                           ; simple_byte            4     3 (average)
  1194                           ; direct_byte           11     8 (fixed)
  1195                           ; jumptable            260     6 (fixed)
  1196                           ;	Chosen strategy is simple_byte
  1197  0234  0876               	movf	??_Displayturno+1,w
  1198  0235  3A00               	xorlw	0	; case 0
  1199  0236  1903               	skipnz
  1200  0237  2A39               	goto	l1560
  1201  0238  2A2F               	goto	l1188
  1202  0239                     l1560:
  1203                           
  1204                           ; Switch size 1, requested type "simple"
  1205                           ; Number of cases is 3, Range of values is 0 to 2
  1206                           ; switch strategies available:
  1207                           ; Name         Instructions Cycles
  1208                           ; simple_byte           10     6 (average)
  1209                           ; direct_byte           17     8 (fixed)
  1210                           ; jumptable            260     6 (fixed)
  1211                           ;	Chosen strategy is simple_byte
  1212  0239  0875               	movf	??_Displayturno,w
  1213  023A  3A00               	xorlw	0	; case 0
  1214  023B  1903               	skipnz
  1215  023C  2A27               	goto	l113
  1216  023D  3A01               	xorlw	1	; case 1
  1217  023E  1903               	skipnz
  1218  023F  2A2A               	goto	l1186
  1219  0240  3A03               	xorlw	3	; case 2
  1220  0241  1903               	skipnz
  1221  0242  2A2F               	goto	l1188
  1222  0243  2A2F               	goto	l1188
  1223  0244                     l118:
  1224  0244  0008               	return
  1225  0245                     __end_of_Displayturno:
  1226                           
  1227                           	psect	text5
  1228  017A                     __ptext5:	
  1229 ;; *************** function _ArregloNumero *****************
  1230 ;; Defined at:
  1231 ;;		line 177 in file "AlternoPostlab7Main.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  numero          1    wreg     unsigned char 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  numero          1    7[COMMON] unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       0       0       0
  1246 ;;      Locals:         1       0       0       0       0
  1247 ;;      Temps:          2       0       0       0       0
  1248 ;;      Totals:         3       0       0       0       0
  1249 ;;Total ram usage:        3 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 1
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_main
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           
  1260                           ;psect for function _ArregloNumero
  1261  017A                     _ArregloNumero:
  1262                           
  1263                           ;incstack = 0
  1264                           ; Regs used in _ArregloNumero: [wreg-fsr0h+status,2+status,0]
  1265                           ;ArregloNumero@numero stored from wreg
  1266  017A  00F7               	movwf	ArregloNumero@numero
  1267  017B                     l1108:
  1268                           
  1269                           ;AlternoPostlab7Main.c: 177: uint8_t ArregloNumero (uint8_t numero);AlternoPostlab7Main.
      +                          c: 178: {;AlternoPostlab7Main.c: 179:     switch(numero){
  1270  017B  2990               	goto	l1178
  1271  017C                     l1110:
  1272                           
  1273                           ;AlternoPostlab7Main.c: 181:             return 0b00111111;
  1274  017C  303F               	movlw	63
  1275  017D  29B8               	goto	l98
  1276  017E                     l1116:
  1277                           
  1278                           ;AlternoPostlab7Main.c: 185:             return 0b00000110;
  1279  017E  3006               	movlw	6
  1280  017F  29B8               	goto	l98
  1281  0180                     l1122:
  1282                           
  1283                           ;AlternoPostlab7Main.c: 189:             return 0b01011011;
  1284  0180  305B               	movlw	91
  1285  0181  29B8               	goto	l98
  1286  0182                     l1128:
  1287                           
  1288                           ;AlternoPostlab7Main.c: 193:             return 0b01001111;
  1289  0182  304F               	movlw	79
  1290  0183  29B8               	goto	l98
  1291  0184                     l1134:
  1292                           
  1293                           ;AlternoPostlab7Main.c: 197:             return 0b01100110;
  1294  0184  3066               	movlw	102
  1295  0185  29B8               	goto	l98
  1296  0186                     l1140:
  1297                           
  1298                           ;AlternoPostlab7Main.c: 201:             return 0b01101101;
  1299  0186  306D               	movlw	109
  1300  0187  29B8               	goto	l98
  1301  0188                     l1146:
  1302                           
  1303                           ;AlternoPostlab7Main.c: 205:             return 0b01111101;
  1304  0188  307D               	movlw	125
  1305  0189  29B8               	goto	l98
  1306  018A                     l1152:
  1307                           
  1308                           ;AlternoPostlab7Main.c: 209:             return 0b00000111;
  1309  018A  3007               	movlw	7
  1310  018B  29B8               	goto	l98
  1311  018C                     l1158:
  1312                           
  1313                           ;AlternoPostlab7Main.c: 213:             return 0b01111111;
  1314  018C  307F               	movlw	127
  1315  018D  29B8               	goto	l98
  1316  018E                     l1164:
  1317                           
  1318                           ;AlternoPostlab7Main.c: 217:             return 0b01101111;
  1319  018E  306F               	movlw	111
  1320  018F  29B8               	goto	l98
  1321  0190                     l1178:
  1322  0190  0877               	movf	ArregloNumero@numero,w
  1323  0191  00F5               	movwf	??_ArregloNumero
  1324  0192  01F6               	clrf	??_ArregloNumero+1
  1325                           
  1326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1327                           ; Switch size 1, requested type "simple"
  1328                           ; Number of cases is 1, Range of values is 0 to 0
  1329                           ; switch strategies available:
  1330                           ; Name         Instructions Cycles
  1331                           ; simple_byte            4     3 (average)
  1332                           ; direct_byte           11     8 (fixed)
  1333                           ; jumptable            260     6 (fixed)
  1334                           ;	Chosen strategy is simple_byte
  1335  0193  0876               	movf	??_ArregloNumero+1,w
  1336  0194  3A00               	xorlw	0	; case 0
  1337  0195  1903               	skipnz
  1338  0196  2998               	goto	l1562
  1339  0197  297C               	goto	l1110
  1340  0198                     l1562:
  1341                           
  1342                           ; Switch size 1, requested type "simple"
  1343                           ; Number of cases is 10, Range of values is 0 to 9
  1344                           ; switch strategies available:
  1345                           ; Name         Instructions Cycles
  1346                           ; simple_byte           31    16 (average)
  1347                           ; direct_byte           38     8 (fixed)
  1348                           ; jumptable            260     6 (fixed)
  1349                           ;	Chosen strategy is simple_byte
  1350  0198  0875               	movf	??_ArregloNumero,w
  1351  0199  3A00               	xorlw	0	; case 0
  1352  019A  1903               	skipnz
  1353  019B  297C               	goto	l1110
  1354  019C  3A01               	xorlw	1	; case 1
  1355  019D  1903               	skipnz
  1356  019E  297E               	goto	l1116
  1357  019F  3A03               	xorlw	3	; case 2
  1358  01A0  1903               	skipnz
  1359  01A1  2980               	goto	l1122
  1360  01A2  3A01               	xorlw	1	; case 3
  1361  01A3  1903               	skipnz
  1362  01A4  2982               	goto	l1128
  1363  01A5  3A07               	xorlw	7	; case 4
  1364  01A6  1903               	skipnz
  1365  01A7  2984               	goto	l1134
  1366  01A8  3A01               	xorlw	1	; case 5
  1367  01A9  1903               	skipnz
  1368  01AA  2986               	goto	l1140
  1369  01AB  3A03               	xorlw	3	; case 6
  1370  01AC  1903               	skipnz
  1371  01AD  2988               	goto	l1146
  1372  01AE  3A01               	xorlw	1	; case 7
  1373  01AF  1903               	skipnz
  1374  01B0  298A               	goto	l1152
  1375  01B1  3A0F               	xorlw	15	; case 8
  1376  01B2  1903               	skipnz
  1377  01B3  298C               	goto	l1158
  1378  01B4  3A01               	xorlw	1	; case 9
  1379  01B5  1903               	skipnz
  1380  01B6  298E               	goto	l1164
  1381  01B7  297C               	goto	l1110
  1382  01B8                     l98:
  1383  01B8  0008               	return
  1384  01B9                     __end_of_ArregloNumero:
  1385                           
  1386                           	psect	text6
  1387  01B9                     __ptext6:	
  1388 ;; *************** function _isr *****************
  1389 ;; Defined at:
  1390 ;;		line 58 in file "AlternoPostlab7Main.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          5       0       0       0       0
  1407 ;;      Totals:         5       0       0       0       0
  1408 ;;Total ram usage:        5 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		Interrupt level 1
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           
  1418                           ;psect for function _isr
  1419  01B9                     _isr:
  1420  01B9                     i1l1282:
  1421                           
  1422                           ;AlternoPostlab7Main.c: 60:      if(INTCONbits.T0IF)
  1423  01B9  1D0B               	btfss	11,2	;volatile
  1424  01BA  29BC               	goto	u44_21
  1425  01BB  29BD               	goto	u44_20
  1426  01BC                     u44_21:
  1427  01BC  29EF               	goto	i1l74
  1428  01BD                     u44_20:
  1429  01BD  29D3               	goto	i1l1298
  1430  01BE                     i1l1288:
  1431                           
  1432                           ;AlternoPostlab7Main.c: 65:                 PORTC = display0;
  1433  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1434  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1435  01C0  082F               	movf	_display0,w
  1436  01C1  0087               	movwf	7	;volatile
  1437  01C2                     i1l1290:
  1438                           
  1439                           ;AlternoPostlab7Main.c: 66:                 PORTD = 0b001;
  1440  01C2  3001               	movlw	1
  1441  01C3  0088               	movwf	8	;volatile
  1442                           
  1443                           ;AlternoPostlab7Main.c: 67:                 break;
  1444  01C4  29E6               	goto	i1l1300
  1445  01C5                     i1l1292:
  1446                           
  1447                           ;AlternoPostlab7Main.c: 69:                 PORTC = display1;
  1448  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1449  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1450  01C7  082E               	movf	_display1,w
  1451  01C8  0087               	movwf	7	;volatile
  1452                           
  1453                           ;AlternoPostlab7Main.c: 70:                 PORTD = 0b010;
  1454  01C9  3002               	movlw	2
  1455  01CA  0088               	movwf	8	;volatile
  1456                           
  1457                           ;AlternoPostlab7Main.c: 71:                 break;
  1458  01CB  29E6               	goto	i1l1300
  1459  01CC                     i1l1294:
  1460                           
  1461                           ;AlternoPostlab7Main.c: 73:                 PORTC = display2;
  1462  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1463  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1464  01CE  082D               	movf	_display2,w
  1465  01CF  0087               	movwf	7	;volatile
  1466                           
  1467                           ;AlternoPostlab7Main.c: 74:                 PORTD = 0b100;
  1468  01D0  3004               	movlw	4
  1469  01D1  0088               	movwf	8	;volatile
  1470                           
  1471                           ;AlternoPostlab7Main.c: 75:                 break;
  1472  01D2  29E6               	goto	i1l1300
  1473  01D3                     i1l1298:
  1474  01D3  0878               	movf	_turno,w
  1475  01D4  00F0               	movwf	??_isr
  1476  01D5  01F1               	clrf	??_isr+1
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ; direct_byte           11     8 (fixed)
  1485                           ; jumptable            260     6 (fixed)
  1486                           ;	Chosen strategy is simple_byte
  1487  01D6  0871               	movf	??_isr+1,w
  1488  01D7  3A00               	xorlw	0	; case 0
  1489  01D8  1903               	skipnz
  1490  01D9  29DB               	goto	i1l1564
  1491  01DA  29E6               	goto	i1l1300
  1492  01DB                     i1l1564:
  1493                           
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 3, Range of values is 0 to 2
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte           10     6 (average)
  1499                           ; direct_byte           17     8 (fixed)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  01DB  0870               	movf	??_isr,w
  1503  01DC  3A00               	xorlw	0	; case 0
  1504  01DD  1903               	skipnz
  1505  01DE  29BE               	goto	i1l1288
  1506  01DF  3A01               	xorlw	1	; case 1
  1507  01E0  1903               	skipnz
  1508  01E1  29C5               	goto	i1l1292
  1509  01E2  3A03               	xorlw	3	; case 2
  1510  01E3  1903               	skipnz
  1511  01E4  29CC               	goto	i1l1294
  1512  01E5  29E6               	goto	i1l1300
  1513  01E6                     i1l1300:
  1514                           
  1515                           ;AlternoPostlab7Main.c: 82:         PORTE++;
  1516  01E6  3001               	movlw	1
  1517  01E7  00F0               	movwf	??_isr
  1518  01E8  0870               	movf	??_isr,w
  1519  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1520  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1521  01EB  0789               	addwf	9,f	;volatile
  1522  01EC                     i1l1302:
  1523                           
  1524                           ;AlternoPostlab7Main.c: 83:         INTCONbits.T0IF = 0;
  1525  01EC  110B               	bcf	11,2	;volatile
  1526  01ED                     i1l1304:
  1527                           
  1528                           ;AlternoPostlab7Main.c: 84:         TMR0 = 5;
  1529  01ED  3005               	movlw	5
  1530  01EE  0081               	movwf	1	;volatile
  1531  01EF                     i1l74:
  1532  01EF  0874               	movf	??_isr+4,w
  1533  01F0  008A               	movwf	10
  1534  01F1  0873               	movf	??_isr+3,w
  1535  01F2  0084               	movwf	4
  1536  01F3  0E72               	swapf	??_isr+2,w
  1537  01F4  0083               	movwf	3
  1538  01F5  0EFE               	swapf	btemp,f
  1539  01F6  0E7E               	swapf	btemp,w
  1540  01F7  0009               	retfie
  1541  01F8                     __end_of_isr:
  1542  007E                     btemp	set	126	;btemp
  1543  007E                     wtemp0	set	126
  1544                           
  1545                           	psect	intentry
  1546  0004                     __pintentry:	
  1547                           ;incstack = 0
  1548                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1549                           
  1550  0004                     interrupt_function:
  1551  007E                     saved_w	set	btemp
  1552  0004  00FE               	movwf	btemp
  1553  0005  0E03               	swapf	3,w
  1554  0006  00F2               	movwf	??_isr+2
  1555  0007  0804               	movf	4,w
  1556  0008  00F3               	movwf	??_isr+3
  1557  0009  080A               	movf	10,w
  1558  000A  00F4               	movwf	??_isr+4
  1559  000B  120A  118A  29B9   	ljmp	_isr
  1560                           
  1561                           	psect	config
  1562                           
  1563                           ;Config register CONFIG1 @ 0x2007
  1564                           ;	Oscillator Selection bits
  1565                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1566                           ;	Watchdog Timer Enable bit
  1567                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1568                           ;	Power-up Timer Enable bit
  1569                           ;	PWRTE = OFF, PWRT disabled
  1570                           ;	RE3/MCLR pin function select bit
  1571                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1572                           ;	Code Protection bit
  1573                           ;	CP = OFF, Program memory code protection is disabled
  1574                           ;	Data Code Protection bit
  1575                           ;	CPD = OFF, Data memory code protection is disabled
  1576                           ;	Brown Out Reset Selection bits
  1577                           ;	BOREN = OFF, BOR disabled
  1578                           ;	Internal External Switchover bit
  1579                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1580                           ;	Fail-Safe Clock Monitor Enabled bit
  1581                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1582                           ;	Low Voltage Programming Enable bit
  1583                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1584                           ;	In-Circuit Debugger Mode bit
  1585                           ;	DEBUG = 0x1, unprogrammed default
  1586  2007                     	org	8199
  1587  2007  20D4               	dw	8404
  1588                           
  1589                           ;Config register CONFIG2 @ 0x2008
  1590                           ;	Brown-out Reset Selection bit
  1591                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1592                           ;	Flash Program Memory Self Write Enable bits
  1593                           ;	WRT = OFF, Write protection off
  1594  2008                     	org	8200
  1595  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80     13      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ArregloNumero
    _main->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1685
                                              8 BANK0      5     5      0
                      _ArregloNumero
                       _Displayturno
                            ___awdiv
                            ___awmod
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     793
                                              5 COMMON     3     3      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Displayturno                                         2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ArregloNumero                                        3     3      0      22
                                              5 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ArregloNumero
   _Displayturno
   ___awdiv
   ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      D      14       5       25.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1D      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 12:20:18 2021

         ??_Displayturno 0075                       l81 00A0                       l93 0225  
                     l85 00AC                       l79 001E                       l98 01B8  
           ___awdiv@sign 0025                      l113 0227                      l118 0244  
                    l370 0179                      l357 011E                      _RB0 0030  
                    _RB1 0031                      u500 00C8                      u501 00C7  
                    u510 00D9                      u511 00D8                      u600 0131  
                    u601 0130                      u530 00EB                      u610 013C  
                    u531 00EA                      u611 013B                      u700 00AC  
                    u525 00DD                      u701 00AB                      u550 00FC  
                    u630 014E                      u710 00B0                      u551 00FB  
                    u631 014D                      u711 00AF                      u640 0158  
                    u545 00EC                      u641 0157                      u625 0140  
                    u570 0110                      u490 00BD                      u571 010F  
                    u555 00F8                      u491 00BC                      u580 0115  
                    u660 016B                      u581 0114                      u565 0104  
                    u661 016A                      u645 0154                      u670 0170  
                    u590 0126                      u671 016F                      u655 015F  
                    u591 0125                      u680 00A0                      u681 009F  
                    u690 00A4                      u691 00A3                      _isr 01B9  
                    fsr0 0004             ___awmod@sign 0077                     l1100 021F  
                   l1110 017C                     l1102 0220                     l1104 0221  
                   l1122 0180                     l1140 0186                     l1116 017E  
                   l1108 017B                     l1060 0203                     l1052 01F8  
                   l1134 0184                     l1070 020A                     l1062 0204  
                   l1054 01FF                     l1152 018A                     l1128 0182  
                   l1400 00C2                     l1080 0214                     l1072 020B  
                   l1064 0207                     l1056 0201                     l1146 0188  
                   l1410 00D3                     l1402 00C4                     l1090 0219  
                   l1082 0215                     l1074 0211                     l1066 0208  
                   l1058 0202                     l1164 018E                     l1420 00EB  
                   l1412 00D9                     l1404 00C8                     l1092 021B  
                   l1084 0216                     l1076 0212                     l1068 0209  
                   l1158 018C                     l1422 00FC                     l1414 00DC  
                   l1430 0110                     l1406 00CD                     l1094 021C  
                   l1086 0217                     l1078 0213                     l1184 0226  
                   l1432 0115                     l1424 0102                     l1416 00E3  
                   l1408 00D1                     l1440 0120                     l1096 021D  
                   l1088 0218                     l1178 0190                     l1186 022A  
                   l1194 0231                     l1434 011A                     l1426 0103  
                   l1418 00E7                     l1450 0136                     l1442 0126  
                   l1098 021E                     l1188 022F                     l1428 010A  
                   l1460 014E                     l1452 013C                     l1444 012B  
                   l1470 0170                     l1462 0158                     l1454 013F  
                   l1446 012D                     l1438 011F                     l1560 0239  
                   l1472 0175                     l1464 015E                     l1456 0146  
                   l1448 0131                     l1480 007D                     l1562 0198  
                   l1394 00B6                     l1466 0165                     l1458 014A  
                   l1482 0088                     l1396 00B9                     l1468 016B  
                   l1492 00A4                     l1484 0093                     l1476 0019  
                   l1398 00BD                     l1494 00A8                     l1486 0095  
                   l1478 0072                     l1488 009A                     l1498 00B0  
                   ?_isr 0070                     i1l74 01EF                     _TMR0 0001  
                   _WPUB 0095                     _main 0019                     btemp 007E  
                   start 000E                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 011F          __end_of___awmod 017A                    _ANSEL 0188  
        ___awdiv@divisor 0020          ___awdiv@counter 0024                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    u44_20 01BD                    u44_21 01BC  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _setup 01F8  
                  _turno 0078                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 00B6  
                 ??_main 0028            main@cociente0 002B         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1300 01E6  
                 i1l1302 01EC                   i1l1304 01ED                   i1l1290 01C2  
                 i1l1282 01B9                   i1l1292 01C5                   i1l1294 01CC  
                 i1l1288 01BE                   i1l1298 01D3                   i1l1564 01DB  
   __end_of_Displayturno 0245                ??___awdiv 0075                ??___awmod 0075  
                 _cuenta 0033         ___awdiv@quotient 0026          ___awmod@divisor 0020  
        ___awmod@counter 0076                   saved_w 007E  __end_of__initialization 0015  
         __pcstackCOMMON 0070            __end_of_setup 0226           _OPTION_REGbits 0081  
                ??_setup 0075               __pbssBANK0 0033    __end_of_ArregloNumero 01B9  
             __pmaintext 0019               __pintentry 0004    __size_of_Displayturno 001F  
                ___awdiv 00B6                  ___awmod 011F                  _decenas 0031  
           _Displayturno 0226                  __ptext1 01F8                  __ptext2 011F  
                __ptext3 00B6                  __ptext4 0226                  __ptext5 017A  
                __ptext6 01B9             __size_of_isr 003F         ___awmod@dividend 0022  
   end_of_initialization 0015                _PORTBbits 0006      start_initialization 0011  
            __end_of_isr 01F8              __pbssCOMMON 0078                ___latbits 0002  
          __pcstackBANK0 0020                __pnvBANK0 002D                 ?___awdiv 0020  
               ?___awmod 0020   __size_of_ArregloNumero 003F           __size_of_setup 002E  
    ArregloNumero@numero 0077        interrupt_function 0004            _ArregloNumero 017A  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _centenas 0030  
               _display0 002F                 _display1 002E                 _display2 002D  
          __size_of_main 009D           ?_ArregloNumero 0070                 _unidades 0032  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
          ?_Displayturno 0070          ??_ArregloNumero 0075  
